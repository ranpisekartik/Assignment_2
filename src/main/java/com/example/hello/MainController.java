package com.example.hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	//private UserRepository userRepository;
	
	
	@RequestMapping(path="/") // Map ONLY GET Requests
	public ModelAndView renderIndex() {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		ModelAndView m = new ModelAndView();
		m.setViewName("Index");
		
		return m;
	}

		@GetMapping(path="/FavGames")
	    public ModelAndView FavGames() {
			ModelAndView m = new ModelAndView();
	        m.setViewName("select Favorite teams");
	        m.addObject("name", "Bharghav");
	        return m;
	    }
	
	/*@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}*/
	
	@PostMapping(path="/fav")
	   public ModelAndView saveStuff(@RequestParam String name
				, @RequestParam String favGame) {
	      
	      ModelAndView aa = new  ModelAndView("results");     
	      aa.addObject("name", name);
	      aa.addObject("favGame", favGame);
	      return aa;
	   }
	
	/*@PostMapping(path="/fav")
	   public String saveStuff(@ModelAttribute User user) {
	      
	           
	      return "results";
	   }*/
	
	/*@GetMapping(path="/fav") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (Model favgame) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		favgame.addAttribute("game", n);
		//userRepository.save(n);
		return "Saved";
	}*/
	
	/*@RequestMapping(value = "/fav", method = RequestMethod.POST)
	public ModelAndView savestuff(@RequestParam String name1) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
name1="Washington Wizards";
		ModelAndView m = new ModelAndView("FavGames");
		
		m.addObject("favgame", name1);
		return m;
	}*/
	/*@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}*/
}